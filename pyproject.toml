[build-system]
requires = ["setuptools", "wheel", "setuptools-rust"]
build-backend = "setuptools.build_meta"

[project]
name = "four-sided-triangle"
version = "0.1.0"
description = "High-performance RAG system with Rust optimization"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Rust",
]
dependencies = [
    "numpy>=1.21.0",
    "torch>=2.0.0",
    "transformers>=4.25.0",
    "datasets>=2.7.0",
    "accelerate>=0.15.0",
    "peft>=0.6.0",
    "bitsandbytes>=0.41.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "pandas>=1.3.0",
    "anthropic>=0.3.0",
    "openai>=1.0.0",
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "pydantic>=1.8.0",
    "sqlalchemy>=1.4.0",
    "alembic>=1.7.0",
    "redis>=4.0.0",
    "celery>=5.2.0",
    "python-multipart>=0.0.5",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=0.19.0",
    "loguru>=0.6.0",
    "pytest>=6.2.0",
    "pytest-asyncio>=0.19.0",
    "httpx>=0.23.0",
]

[project.optional-dependencies]
dev = [
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.17.0",
    "pytest-cov>=3.0.0",
    "pytest-benchmark>=3.4.0",
]

[tool.setuptools]
packages = ["app"]

[tool.setuptools-rust]
extension-modules = [
    {target = "four_sided_triangle_core", path = "Cargo.toml"},
]

[tool.maturin]
python-source = "python"
module-name = "four_sided_triangle_core"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
